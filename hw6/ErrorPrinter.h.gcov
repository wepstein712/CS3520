        -:    0:Source:cxxtest-4.4/cxxtest/ErrorPrinter.h
        -:    0:Graph:runner.gcno
        -:    0:Data:runner.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/*
        -:    2:-------------------------------------------------------------------------
        -:    3: CxxTest: A lightweight C++ unit testing library.
        -:    4: Copyright (c) 2008 Sandia Corporation.
        -:    5: This software is distributed under the LGPL License v3
        -:    6: For more information, see the COPYING file in the top CxxTest directory.
        -:    7: Under the terms of Contract DE-AC04-94AL85000 with Sandia Corporation,
        -:    8: the U.S. Government retains certain rights in this software.
        -:    9:-------------------------------------------------------------------------
        -:   10:*/
        -:   11:
        -:   12:#ifndef __cxxtest__ErrorPrinter_h__
        -:   13:#define __cxxtest__ErrorPrinter_h__
        -:   14:
        -:   15://
        -:   16:// The ErrorPrinter is a simple TestListener that
        -:   17:// just prints "OK" if everything goes well, otherwise
        -:   18:// reports the error in the format of compiler messages.
        -:   19:// The ErrorPrinter uses std::cout
        -:   20://
        -:   21:
        -:   22:#include <cxxtest/Flags.h>
        -:   23:
        -:   24:#ifndef _CXXTEST_HAVE_STD
        -:   25:#   define _CXXTEST_HAVE_STD
        -:   26:#endif // _CXXTEST_HAVE_STD
        -:   27:
        -:   28:#include <cxxtest/ErrorFormatter.h>
        -:   29:#include <cxxtest/StdValueTraits.h>
        -:   30:
        -:   31:#ifdef _CXXTEST_OLD_STD
        -:   32:#   include <iostream.h>
        -:   33:#else // !_CXXTEST_OLD_STD
        -:   34:#   include <iostream>
        -:   35:#endif // _CXXTEST_OLD_STD
        -:   36:
        -:   37:namespace CxxTest
        -:   38:{
        -:   39:class ErrorPrinter : public ErrorFormatter
        -:   40:{
        -:   41:public:
        1:   42:    ErrorPrinter(CXXTEST_STD(ostream) &o = CXXTEST_STD(cout), const char *preLine = ":", const char *postLine = "",
        -:   43:                 const char *errorString = "Error",
        -:   44:                 const char *warningString = "Warning") :
        1:   45:        ErrorFormatter(new Adapter(o), preLine, postLine, errorString, warningString) {}
        1:   46:    virtual ~ErrorPrinter() { delete outputStream(); }
        -:   47:
        -:   48:private:
        2:   49:    class Adapter : public OutputStream
        -:   50:    {
        -:   51:        CXXTEST_STD(ostream) &_o;
        -:   52:    public:
        1:   53:        Adapter(CXXTEST_STD(ostream) &o) : _o(o) {}
       21:   54:        void flush() { _o.flush(); }
       27:   55:        OutputStream &operator<<(const char *s) { _o << s; return *this; }
        2:   56:        OutputStream &operator<<(Manipulator m) { return OutputStream::operator<<(m); }
    #####:   57:        OutputStream &operator<<(unsigned i)
        -:   58:        {
        -:   59:            char s[1 + 3 * sizeof(unsigned)];
    #####:   60:            numberToString(i, s);
    #####:   61:            _o << s;
    #####:   62:            return *this;
        -:   63:        }
        -:   64:    };
        -:   65:};
        -:   66:}
        -:   67:
        -:   68:#endif // __cxxtest__ErrorPrinter_h__
