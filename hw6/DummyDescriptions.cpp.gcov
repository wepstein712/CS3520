        -:    0:Source:cxxtest-4.4/cxxtest/DummyDescriptions.cpp
        -:    0:Graph:runner.gcno
        -:    0:Data:runner.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/*
        -:    2:-------------------------------------------------------------------------
        -:    3: CxxTest: A lightweight C++ unit testing library.
        -:    4: Copyright (c) 2008 Sandia Corporation.
        -:    5: This software is distributed under the LGPL License v3
        -:    6: For more information, see the COPYING file in the top CxxTest directory.
        -:    7: Under the terms of Contract DE-AC04-94AL85000 with Sandia Corporation,
        -:    8: the U.S. Government retains certain rights in this software.
        -:    9:-------------------------------------------------------------------------
        -:   10:*/
        -:   11:
        -:   12:#include <cxxtest/DummyDescriptions.h>
        -:   13:
        -:   14:namespace CxxTest
        -:   15:{
        1:   16:DummyTestDescription::DummyTestDescription() {}
        -:   17:
    #####:   18:const char *DummyTestDescription::file() const { return "<no file>"; }
    #####:   19:int DummyTestDescription::line() const { return 0; }
    #####:   20:const char *DummyTestDescription::testName() const { return "<no test>"; }
    #####:   21:const char *DummyTestDescription::suiteName() const { return "<no suite>"; }
    #####:   22:bool DummyTestDescription::setUp() { return true;}
    #####:   23:void DummyTestDescription::run() {}
    #####:   24:bool DummyTestDescription::tearDown() { return true;}
        -:   25:
    #####:   26:TestDescription *DummyTestDescription::next() { return 0; }
    #####:   27:const TestDescription *DummyTestDescription::next() const { return 0; }
        -:   28:
        1:   29:DummySuiteDescription::DummySuiteDescription() : _test() {}
        -:   30:
    #####:   31:const char *DummySuiteDescription::file() const { return "<no file>"; }
    #####:   32:int DummySuiteDescription::line() const { return 0; }
    #####:   33:const char *DummySuiteDescription::suiteName() const { return "<no suite>"; }
    #####:   34:TestSuite *DummySuiteDescription::suite() const { return 0; }
    #####:   35:unsigned DummySuiteDescription::numTests() const { return 0; }
       25:   36:const TestDescription &DummySuiteDescription::testDescription(unsigned) const { return _test; }
    #####:   37:SuiteDescription *DummySuiteDescription::next() { return 0; }
    #####:   38:TestDescription *DummySuiteDescription::firstTest() { return 0; }
    #####:   39:const SuiteDescription *DummySuiteDescription::next() const { return 0; }
    #####:   40:const TestDescription *DummySuiteDescription::firstTest() const { return 0; }
    #####:   41:void DummySuiteDescription::activateAllTests() {}
    #####:   42:bool DummySuiteDescription::leaveOnly(const char * /*testName*/) { return false; }
        -:   43:
    #####:   44:bool DummySuiteDescription::setUp() { return true;}
    #####:   45:bool DummySuiteDescription::tearDown() { return true;}
        -:   46:
        1:   47:DummyWorldDescription::DummyWorldDescription() : _suite() {}
        -:   48:
    #####:   49:unsigned DummyWorldDescription::numSuites(void) const { return 0; }
    #####:   50:unsigned DummyWorldDescription::numTotalTests(void) const { return 0; }
       29:   51:const SuiteDescription &DummyWorldDescription::suiteDescription(unsigned) const { return _suite; }
    #####:   52:SuiteDescription *DummyWorldDescription::firstSuite() { return 0; }
    #####:   53:const SuiteDescription *DummyWorldDescription::firstSuite() const { return 0; }
    #####:   54:void DummyWorldDescription::activateAllTests() {}
    #####:   55:bool DummyWorldDescription::leaveOnly(const char * /*suiteName*/, const char * /*testName*/) { return false; }
        -:   56:
    #####:   57:bool DummyWorldDescription::setUp() { return true;}
    #####:   58:bool DummyWorldDescription::tearDown() { return true;}
        -:   59:}
        -:   60:
